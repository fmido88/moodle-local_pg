{"version":3,"file":"preview.min.js","sources":["../src/preview.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module is used to help preview the page and highlight syntax for css and js codes.\n *\n * @module     local_pg/preview\n * @copyright  2025 Mohammad Farouk <phun.for.physics@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport Modal from 'core/modal';\nimport Prefetch from 'core/prefetch';\nimport Ajax from 'core/ajax';\n/* eslint-disable camelcase */\nimport {beautify} from './beautifier';\nlet js_beautify = beautify.js;\nlet css_beautify = beautify.css;\n\nimport {get_string} from 'core/str';\n/* eslint-enable camelcase */\nimport {\n    EditorState,\n    EditorView,\n    basicSetup,\n    Compartment,\n    lang,\n} from './codemirror';\n\n\nPrefetch.prefetchStrings('local_pg', [\n    'jssyntaxerror',\n    'csssyntaxerror',\n]);\n\n/**\n * @type {Object}\n */\nlet draftLangs = {};\n\nlet cssEditorView;\nlet jsEditorView;\n/**\n * Open a modal to preview the page.\n */\nasync function preview() {\n    // Create the URL object\n    let url = new URL(M.cfg.wwwroot + '/local/pg/preview.php');\n\n    // Add parameters to the URL\n    url.searchParams.set(\"shortname\", $('[name=\"shortname\"]').val());\n    url.searchParams.set(\"header\", $('[name=\"header\"]').val());\n    url.searchParams.set(\"content\", $('[name=\"content_editor[text]\"]').val());\n    url.searchParams.set(\"contentformat\", $('[name=\"content_editor[format]\"]').val());\n    url.searchParams.set(\"layout\", $('[name=\"layout\"]').val());\n    url.searchParams.set(\"css\", $('[name=\"css\"]').val());\n    url.searchParams.set(\"js\", $('[name=\"js\"]').val());\n    url.searchParams.set(\"sesskey\", M.cfg.sesskey);\n    let idInput = $('input[name=\"id\"]');\n\n    if (idInput.length == 1) {\n        let id = idInput.val();\n        if (id) {\n            url.searchParams.set(\"id\", id);\n        }\n    }\n\n    let lang = $('[name=lang]').val();\n    if (lang) {\n        url.searchParams.set(\"lang\", lang);\n    }\n\n    // Create the modal with the updated URL\n    let modal = await Modal.create({\n        large: true,\n        show: true,\n        removeOnClose: true,\n        body: `<iframe src=\"${url.href}\" class=\"embed-responsive-item\"></iframe>`,\n        title: 'Preview'\n    });\n\n    modal.show();\n    $('[data-region=\"body\"]').addClass('embed-responsive').addClass('embed-responsive-16by9');\n    $('[data-region=\"modal\"]').css({\n        'max-width': '100%',\n        'max-height': '100%',\n        'padding': '0',\n        'margin': '0'\n    });\n}\n\n/**\n * Validate and save js code.\n * @param {CodeMirror} cm\n */\nasync function jsValidation(cm) {\n    let errorPlaceholder = $('#js-text-error');\n\n    var code = cm.state.doc.toString().trim();\n    try {\n        // Basic syntax check\n        // eslint-disable-next-line no-new-func\n        Function(code);\n        errorPlaceholder.text('');\n        errorPlaceholder.hide();\n        $('input[type=submit]').removeAttr('disabled');\n        return true;\n    } catch (e) {\n        errorPlaceholder.text(await get_string('jssyntaxerror', 'local_pg', e.message));\n        errorPlaceholder.show();\n        $('input[type=submit]').attr('disabled', true);\n        return false;\n    }\n}\n\n/**\n * Validate and save css code.\n * @param {CodeMirror} cm\n * @return {Boolean}\n */\nasync function validateCSS(cm) {\n    let errorPlaceholder = $('#css-text-error');\n\n    let cssCode = cm.state.doc.toString().trim();\n    let errors = [];\n\n    if (typeof window.CSSLint !== 'undefined') {\n        let result = window.CSSLint.verify(cssCode);\n        errors = result.messages.map(msg => `Line ${msg.line}: ${msg.message}`);\n    } else {\n        try {\n            let style = document.createElement(\"style\");\n            style.textContent = cssCode;\n            document.head.appendChild(style);\n            if (style.sheet.cssRules.length === 0 && cssCode !== \"\") {\n                errors.push(\"Invalid CSS detected.\");\n            }\n            document.head.removeChild(style);\n        } catch (e) {\n            errors.push(\"Invalid CSS syntax.\");\n        }\n    }\n\n    if (errors.length > 0) {\n        errorPlaceholder.text(await get_string('csssyntaxerror', 'local_pg', errors.join(\"<br>\\n\")));\n        errorPlaceholder.show();\n        return true;\n    } else {\n        errorPlaceholder.text('');\n        errorPlaceholder.hide();\n        return false;\n    }\n}\n/**\n * @param {HTMLElement} textarea the text area element.\n * @param {Function} validator function (validateCSS or ValidateJS).\n * @returns\n */\nfunction handleEditorUpdate(textarea, validator) {\n    return EditorView.updateListener.of(update => {\n        if (update.docChanged) {\n            let valid = validator(update);\n            if (!valid) {\n                return;\n            }\n\n            const newValue = update.state.doc.toString();\n\n            if (textarea.value !== newValue) {\n                textarea.value = newValue;\n            }\n        }\n    });\n}\n/**\n * Save draft values of langs in memory.\n */\nfunction saveDraftLang() {\n    let lang = $('[name=lang]').val();\n    let title = $('[name=header]').val();\n    let content = $('[name=\"content_editor[text]\"]').val();\n\n    draftLangs[lang] = {\n        header: title,\n        content: content\n    };\n}\n/**\n * Fires when the language changed.\n */\nasync function changeLang() {\n    let lang = $('[name=lang]').val();\n    let disable = lang != \"\";\n\n    $('[name=shortname]').attr('readonly', disable);\n\n    if (draftLangs[lang]) {\n        if (draftLangs[lang].header) {\n            $('[name=header]').val(draftLangs[lang].header);\n        }\n\n        if (draftLangs[lang].content) {\n            $('[name=\"content_editor[text]\"]').val(draftLangs[lang].content);\n            $('#id_content_editoreditable').html(draftLangs[lang].content);\n        }\n\n        return;\n    }\n\n    draftLangs[lang] = {\n        header: undefined,\n        content: undefined\n    };\n\n    let requests = Ajax.call([{\n        methodname: 'local_pg_get_lang_content',\n        args: {\n            id: $('[name=id]').val(),\n            lang: lang\n        }\n    }]);\n\n    let response = await requests[0];\n    if (response.header) {\n        $('[name=header]').val(response.header);\n\n        draftLangs[lang].header = response.header;\n    }\n\n    if (response.content) {\n        $('[name=\"content_editor[text]\"]').val(response.content);\n        draftLangs[lang].content = response.content;\n        $('#id_content_editoreditable').html(response.content);\n    }\n}\n\nexport const init = () => {\n    // Must be sure that the dom is ready so codemirror is loaded.\n    $(function() {\n        // Load JavaScript mode\n        let jsTextarea = document.querySelector('textarea[name=\"js\"]');\n        const jsCompartment = new Compartment();\n\n        const editorStyle = EditorView.theme({\n                            '&': {\n                                height: '300px',\n                                width: '100%',\n                                border: '1px solid #8f959e',\n                                borderRadius: '0.5rem',\n                            },\n                        });\n        if (jsTextarea) {\n            const beautifiedJS = js_beautify(jsTextarea.value, {\n                indent_size: 4\n            });\n            jsTextarea.value = beautifiedJS;\n\n            // Create a container for CodeMirror (next to the textarea)\n            const jsContainer = document.createElement('div');\n            jsContainer.style.width = '100%';\n            jsTextarea.style.display = 'none';\n            jsTextarea.parentNode.insertBefore(jsContainer, jsTextarea.nextSibling);\n\n            jsEditorView = new EditorView({\n                state: EditorState.create({\n                    doc: beautifiedJS,\n                    extensions: [\n                        basicSetup,\n                        editorStyle,\n                        lang.javascript(),\n                        jsCompartment.of([]),\n                        handleEditorUpdate(jsTextarea, jsValidation)\n                    ]\n                }),\n                parent: jsContainer\n            });\n        }\n\n        // Load CSS mode\n        let cssTextarea = document.querySelector('textarea[name=\"css\"]');\n        const cssCompartment = new Compartment();\n\n        if (cssTextarea) {\n            const beautifiedCSS = css_beautify(cssTextarea.value, {\n                indent_size: 2\n            });\n            cssTextarea.value = beautifiedCSS;\n\n            const cssContainer = document.createElement('div');\n            cssContainer.style.width = '100%';\n            cssTextarea.style.display = 'none';\n            cssTextarea.parentNode.insertBefore(cssContainer, cssTextarea.nextSibling);\n\n            cssEditorView = new EditorView({\n                state: EditorState.create({\n                    doc: beautifiedCSS,\n                    extensions: [\n                        basicSetup,\n                        lang.css(),\n                        editorStyle,\n                        cssCompartment.of([]),\n                        handleEditorUpdate(cssTextarea, validateCSS)\n                    ]\n                }),\n                parent: cssContainer\n            });\n        }\n\n        // I need to freeze the Codemirror textarea so that the user can't change the code if selected lang not ''.\n        let langInput = $('[name=lang]');\n        langInput.on('change', function() {\n            let readOnly = $(this).val() !== ''; // Read-only if lang is not empty\n            if (jsEditorView) {\n                jsEditorView.dispatch({\n                    effects: jsCompartment.reconfigure(readOnly ? EditorView.editable.of(false) : [])\n                });\n            }\n            if (cssEditorView) {\n                cssEditorView.dispatch({\n                    effects: cssCompartment.reconfigure(readOnly ? EditorView.editable.of(false) : [])\n                });\n            }\n            changeLang();\n        });\n\n        $('button[name=\"preview\"]').on(\"click\", function() {\n            preview();\n        });\n\n        $('[name=\"content_editor[text]\"], [name=\"header\"]').on('input, change', saveDraftLang);\n\n        saveDraftLang();\n    });\n};\n"],"names":["js_beautify","beautify","js","css_beautify","css","prefetchStrings","cssEditorView","jsEditorView","draftLangs","jsValidation","cm","errorPlaceholder","code","state","doc","toString","trim","Function","text","hide","removeAttr","e","message","show","attr","validateCSS","cssCode","errors","window","CSSLint","verify","messages","map","msg","line","style","document","createElement","textContent","head","appendChild","sheet","cssRules","length","push","removeChild","join","handleEditorUpdate","textarea","validator","EditorView","updateListener","of","update","docChanged","newValue","value","saveDraftLang","lang","val","title","content","header","jsTextarea","querySelector","jsCompartment","Compartment","editorStyle","theme","height","width","border","borderRadius","beautifiedJS","indent_size","jsContainer","display","parentNode","insertBefore","nextSibling","EditorState","create","extensions","basicSetup","javascript","parent","cssTextarea","cssCompartment","beautifiedCSS","cssContainer","on","readOnly","this","dispatch","effects","reconfigure","editable","disable","html","undefined","requests","Ajax","call","methodname","args","id","response","changeLang","url","URL","M","cfg","wwwroot","searchParams","set","sesskey","idInput","Modal","large","removeOnClose","body","href","addClass","preview"],"mappings":"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"}